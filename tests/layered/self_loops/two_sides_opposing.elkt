/*******************************************************************************
 * Copyright (c) 2018 Kiel University and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *******************************************************************************/
algorithm: layered
edgeRouting: ORTHOGONAL

node N1 {
	layout [ size: 40, 40 ]
	portConstraints: FIXED_SIDE
	label L1: "N1"
	port N1_out {
		layout [ size: 8, 8 ]
		side: EAST
		label L2: "out"
	}
	port N1_in {
		layout [ size: 8, 8 ]
		side: WEST
		label L3: "in"
	}
}
node N2 {
	layout [ size: 40, 40 ]
	portConstraints: FIXED_SIDE
	label L4: "N2"
	port N2_out {
		layout [ size: 8, 8 ]
		side: WEST
		label L5: "out"
	}
	port N2_in {
		layout [ size: 8, 8 ]
		side: EAST
		label L6: "in"
	}
}
node N3 {
	layout [ size: 40, 40 ]
	portConstraints: FIXED_SIDE
	label L7: "N3"
	port N3_out {
		layout [ size: 8, 8 ]
		side: NORTH
		label L8: "out"
	}
	port N3_in {
		layout [ size: 8, 8 ]
		side: SOUTH
		label L9: "in"
	}
}
node N4 {
	layout [ size: 40, 40 ]
	portConstraints: FIXED_SIDE
	label L10: "N4"
	port N4_out {
		layout [ size: 8, 8 ]
		side: SOUTH
		label L11: "out"
	}
	port N4_in {
		layout [ size: 8, 8 ]
		side: NORTH
		label L12: "in"
	}
}
edge E1: N1.N1_out -> N1.N1_in
edge E2: N2.N2_out -> N2.N2_in
edge E3: N3.N3_out -> N3.N3_in
edge E4: N4.N4_out -> N4.N4_in
