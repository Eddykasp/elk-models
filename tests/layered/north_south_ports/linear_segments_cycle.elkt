/*******************************************************************************
 * Copyright (c) 2018 Kiel University and others.
 * 
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * SPDX-License-Identifier: EPL-2.0
 *******************************************************************************/
/* Two nodes with three northern ports each, connected in a way that introduces
 * a cycle in the linear segments graph. The layout algorithm should break the
 * cycle at some point, causing one of the edges to get more bend points. The
 * two nodes are connected by an additional node in the middle, to cause the
 * edges to be broken by a long edge dummy.
 * 
 * NOTE: This problem only exists if the order of dummy nodes created for
 *       northern or southern ports is fixed, which is not the case in the
 *       current version of the algorithm.
 */

node N1 {
	layout [ size: 80, 50 ]
	portConstraints: FIXED_POS
	label L1: "N1"
	port P1_E1 {
		layout [
			position: 80, 22
			size: 5, 5
		]
	}
	port P1_N1 {
		layout [
			position: 15, -5
			size: 5, 5
		]
	}
	port P1_N2 {
		layout [
			position: 35, -5
			size: 5, 5
		]
	}
	port P1_N3 {
		layout [
			position: 55, -5
			size: 5, 5
		]
	}
}
node N2 {
	layout [ size: 50, 50 ]
	portConstraints: FIXED_SIDE
	label L2: "N2"
	port P2_1 {
		layout [ size: 5, 5 ]
		side: WEST
	}
	port P2_2 {
		layout [ size: 5, 5 ]
		side: EAST
	}
}
node N3 {
	layout [ size: 80, 50 ]
	portConstraints: FIXED_POS
	label L3: "N3"
	port P3_W1 {
		layout [
			position: -5, 22
			size: 5, 5
		]
	}
	port P3_N1 {
		layout [
			position: 15, -5
			size: 5, 5
		]
	}
	port P3_N2 {
		layout [
			position: 35, -5
			size: 5, 5
		]
	}
	port P3_N3 {
		layout [
			position: 55, -5
			size: 5, 5
		]
	}
}
edge E1: N1.P1_E1 -> N2.P2_1
edge E2: N1.P1_N1 -> N3.P3_N2
edge E3: N1.P1_N2 -> N3.P3_N1
edge E4: N1.P1_N3 -> N3.P3_N3
edge E5: N2.P2_2 -> N3.P3_W1
