/*******************************************************************************
 * Copyright (c) 2017 Kiel University and others.
 * 
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * SPDX-License-Identifier: EPL-2.0
 *******************************************************************************/

// Demonstrates a typical case where strict DOWN or UP label side selection can be ambiguous
algorithm: layered
cycleBreaking.strategy: INTERACTIVE
elk.direction: DOWN

// Select different strategies to check what's right or wrong about them
// DIRECTION_UP is the worst choice
edgeLabels.sideSelection: SMART_UP

// Fix port order to force N2 to be left of the long label
node N1 {
	layout [ position: 0, 0 ]
	portConstraints: FIXED_ORDER
	
	port P1_1 {
		^port.side: SOUTH
		^port.index: 2
	}
	port P1_2 {
		^port.side: SOUTH
		^port.index: 1
	}
}
node N2 {
	layout [ position: 0, 100 ]
	portConstraints: FIXED_ORDER
	
	port P2_1 {
		^port.side: NORTH
		^port.index: 1
	}
	port P2_2 {
		^port.side: NORTH
		^port.index: 2
	}
}

edge N1.P1_1 -> N2.P2_1 { label "An excellent edge label" }
edge N2.P2_2 -> N1.P1_2 { label "An excellent edge label" }